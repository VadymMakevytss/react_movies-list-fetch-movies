{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/api/api.js","components/FindMovie/FindMovie.jsx","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","request","a","fetch","response","ok","Error","json","data","FindMovie","addMovie","useState","setTitle","foundMovie","setFoundMovie","taskDone","setTaskDone","searchMovie","movieFromServer","Response","Poster","Title","Plot","imdbID","prepeardMovie","htmlFor","type","id","placeholder","value","onChange","event","target","onClick","App","state","isMovieExist","setState","prevState","some","film","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.724397cf.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=67b35370&t=';\n\nexport const request = async(title) => {\n  try {\n    const response = await fetch(`${BASE_URL}${title}`);\n\n    if (!response.ok) {\n      throw new Error('Couls not fetch data for that resurs.....');\n    }\n\n    const movie = await response.json();\n\n    return movie.data || movie;\n  } catch (error) {\n    throw new Error('Server errror');\n  }\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport PropTypes from 'prop-types';\n\nimport { request } from '../api/api';\n\nimport { MovieCard } from '../MovieCard';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [foundMovie, setFoundMovie] = useState(null);\n  const [taskDone, setTaskDone] = useState(true);\n\n  const searchMovie = async() => {\n    if (title === '') {\n      setTitle('');\n      setTaskDone(false);\n\n      return;\n    }\n\n    const movieFromServer = await request(title);\n\n    if (movieFromServer.Response === 'False') {\n      setFoundMovie(null);\n      setTaskDone(false);\n\n      return;\n    }\n\n    const { Poster, Title, Plot, imdbID } = movieFromServer;\n\n    const prepeardMovie = ({\n      imgUrl: Poster,\n      title: Title,\n      description: Plot,\n      imdbId: imdbID,\n      imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n    });\n\n    setFoundMovie(prepeardMovie);\n    setTaskDone(true);\n  };\n\n  const handleTitle = (event) => {\n    setTitle(event.target.value);\n    setTaskDone(true);\n  };\n\n  const handleAddEvent = () => {\n    addMovie(foundMovie);\n    setTitle('');\n    setTaskDone(true);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              value={title}\n              onChange={handleTitle}\n            />\n          </div>\n\n          {!taskDone\n            && (\n              <p\n                className=\"help is-danger\"\n              >\n                Can&apos;t find a movie with such a title\n              </p>\n            )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={searchMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={handleAddEvent}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {foundMovie && <MovieCard {...foundMovie} />}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n  };\n\n  addMovie = (searchMovie) => {\n    if (!this.isMovieExist(searchMovie)) {\n      this.setState(prevState => ({\n        movies: [...prevState.movies, searchMovie],\n      }));\n    }\n  }\n\n  isMovieExist = movie => this.state.movies\n    .some(film => film.imdbId === movie.imdbId);\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}